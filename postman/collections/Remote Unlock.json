{
	"info": {
		"_postman_id": "71bd6c4a-29b0-4d37-ae9d-7823915ed127",
		"name": "Remote Unlock",
		"description": "Performance Motor's Remote Unlock API allows users to lock and unlock PM-integrated cars remotely and control interior temperature via a webhook from an approved device or service.\n\n![remote unlock](https://user-images.githubusercontent.com/20145532/130453877-4fd744a4-6c9a-4eea-9b1c-ef252bcb5525.png)\n\n## Third-party services\n**Due to the rise of connected car services which require lock/unlock access to perform actions (i.e. mobile fueling trucks, Amazon car package drop off), the Remote Unlock service has been uncoupled from the Remote Start service and as of January 2020 and requires additional steps for verification and authentication.** Balancing security with ease of interoperability for partners is top-of-mind for Performance Motors, and we have a team dedicated to vetting potential partners before they may access consumer vehicles. If you are representing a connected car service and would like to apply for access to the Remote Unlock service, please email remote.unlock@performancemotors.com. \n\nFor examples of services already using the remote unlock integration, check out the following: \n- [Amazon Key App](https://www.amazon.com/primeinsider/tips/in-car-delivery.html): delivering packages to your parked car\n- [Yoshi](https://www.startyoshi.com/):  mobile fueling, cleaning, and servicing. \n\n\n## How does this work with Remote Start and other PM APIs?\nLong-time Performance Motors API consumers may remember that all PM services were previously contained in the same umbrella API service. As of the 2020 split to microservice architecture, that is no longer the case. As the Remote Unlock is under the highest tier of security access, any credentials acquired to use with the Remote Unlock service may be used with any other PM API, but not the other way around. \n\nLogistically, when starting the car remotely, the car remains locked until a qualifying event triggers an unlock. Similarly, an `Engine Off` call has no effect on lock status. \n\n## Getting Started\nWe recommend starting in the `APIs` tab on the left vertical sidebar. Here, you can see the different APIs that are built by PM developers, as well as browse the API specifications. Once you are on the `Define` tab of an individual API, you will be able to see the associated resources (Documentation, Tests, Mock Servers, etc.), and navigate between the different API versions. \n\nOver in the `Collections` view, you will notice that each request has an example response associated with it. By calling the mock server endpoint (just the base url replaced with one generated by Postman's mock server generator), you will be able to access these sample responses without going through the registration/authentication process.\n\n\n## Associated Resources\n- There is an **OpenAPI file** that was used to generate this collection, which you can find in the \"APIs\" tab on the left vertical sidebar. As the API itself evolves, we will use the two-way git sync to update the spec from Bitbucket to Postman, and thus translate those changes over to this documentation collection. \n  - Be sure to check back to this collection before you start implementing, and click the Watch icon on the API to be alerted to any changes\n- **Monitor**: Under the Monitors tab on the same vertical toolbar, we have set up a monitor that runs the collection once a day and displays the results of the tests. \n- **Mock Server**: As this API is liable to expose sensitive information, we have set up a mock server to return example responses. You can still send the requests, just make sure the `baseUrl` variable is filled in with the monitor url to receive a response.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "24113284-71bd6c4a-29b0-4d37-ae9d-7823915ed127"
	},
	"item": [
		{
			"name": "Lock",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1d5bc160-358e-43f9-9d01-f1e5b27cc9fd",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Repsonse contains message\", function () {",
							"    pm.expect(res).to.have.a.property(\"message\");",
							"});"
						]
					}
				}
			],
			"id": "e5589bb6-ce6d-42f8-be1c-3f19e167cc52",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/remote/lock",
					"host": [
						"{{url}}"
					],
					"path": [
						"remote",
						"lock"
					]
				},
				"description": "Locks all elements upon successful execution. \n\nAs lock/unlock are core features of the PM connected car experience, this feature is allowed by default in the customer account settings. However, users do have the option to revoke lock/unlock access to APIs and rely only on the key fob. Thus, developers should check for a successful response before continuing with any further workflows.  \n"
			},
			"response": [
				{
					"id": "c9cba2b4-8669-40a7-8afa-e651eb3f6ab3",
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/remote/lock",
							"host": [
								"{{url}}"
							],
							"path": [
								"remote",
								"lock"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"vehicle is locked\"\n}"
				}
			]
		},
		{
			"name": "Unlock",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30792854-a630-4cc5-96b6-1e09078637eb",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Repsonse contains message\", function () {",
							"    pm.expect(res).to.have.a.property(\"message\");",
							"});"
						]
					}
				}
			],
			"id": "c1cbb275-ebca-43af-ab3f-f979651399dc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/remote/unlock",
					"host": [
						"{{url}}"
					],
					"path": [
						"remote",
						"unlock"
					]
				},
				"description": "Unlocks all elements upon successful execution. \n\nAs lock/unlock are core features of the PM connected car experience, this feature is allowed by default in the customer account settings. However, users do have the option to revoke lock/unlock access to APIs and rely only on the key fob. Thus, developers should check for a successful response before continuing with any further workflows.  \n"
			},
			"response": [
				{
					"id": "8eb489ef-cbbe-4723-933a-b814de545104",
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/remote/unlock",
							"host": [
								"{{url}}"
							],
							"path": [
								"remote",
								"unlock"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"vehicle is unlocked\"\n}"
				}
			]
		},
		{
			"name": "Trunk Release",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a5237c9-4c8b-44c7-9057-179d9083f4f9",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Repsonse contains message\", function () {",
							"    pm.expect(res).to.have.a.property(\"message\");",
							"});"
						]
					}
				}
			],
			"id": "39d21d73-0da9-4cb7-aada-196ca5ed0140",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/remote/trunk",
					"host": [
						"{{url}}"
					],
					"path": [
						"remote",
						"trunk"
					]
				},
				"description": "Unlocks and opens trunk latch upon successful execution. \n\nAs lock/unlock are core features of the PM connected car experience, this feature is allowed by default in the customer account settings. However, users do have the option to revoke lock/unlock access to APIs and rely only on the key fob. Thus, developers should check for a successful response before continuing with any further workflows.  \n"
			},
			"response": [
				{
					"id": "c9dbc4cd-40c8-4ccc-ae5e-e9a739d2e7a6",
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/remote/trunk",
							"host": [
								"{{url}}"
							],
							"path": [
								"remote",
								"trunk"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"trunk is now open\"\n}"
				}
			]
		},
		{
			"name": "Roof/Sunroof",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "774969c4-48a1-44d3-92b0-438c980b80aa",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Repsonse contains message\", function () {",
							"    pm.expect(res).to.have.a.property(\"message\");",
							"});"
						]
					}
				}
			],
			"id": "31625ade-2724-4f64-a7a6-635968f7c529",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/remote/roof/open",
					"host": [
						"{{url}}"
					],
					"path": [
						"remote",
						"roof",
						"open"
					]
				},
				"description": "Unlocks and opens all sunroof elements upon successful execution. \n\nAs lock/unlock are core features of the PM connected car experience, this feature is allowed by default in the customer account settings. However, users do have the option to revoke lock/unlock access to APIs and rely only on the key fob. Thus, developers should check for a successful response before continuing with any further workflows.  \n"
			},
			"response": [
				{
					"id": "f4242def-30ca-4f3e-ab95-c57b655f6eaf",
					"name": "Success - Open",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/remote/roof/open",
							"host": [
								"{{url}}"
							],
							"path": [
								"remote",
								"roof",
								"open"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"sun/roof is now open\"\n}"
				},
				{
					"id": "9ff63d0f-9c0d-4d84-a058-45f2ff527cc1",
					"name": "Success - Close",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/remote/roof/close",
							"host": [
								"{{url}}"
							],
							"path": [
								"remote",
								"roof",
								"close"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"sun/roof is now closed\"\n}"
				}
			]
		},
		{
			"name": "Hood",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "593e7cb5-f675-4cb6-9e5d-9d550be7679f",
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Repsonse contains message\", function () {",
							"    pm.expect(res).to.have.a.property(\"message\");",
							"});"
						]
					}
				}
			],
			"id": "d37c2a1e-2d89-4197-8727-e26a1681598b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/remote/hood",
					"host": [
						"{{url}}"
					],
					"path": [
						"remote",
						"hood"
					]
				},
				"description": "Unlocks and unlatches car hood upon successful execution. \n\nAs lock/unlock are core features of the PM connected car experience, this feature is allowed by default in the customer account settings. However, users do have the option to revoke lock/unlock access to APIs and rely only on the key fob. Thus, developers should check for a successful response before continuing with any further workflows.  \n"
			},
			"response": [
				{
					"id": "a53bea56-4255-41fc-9e24-40935ae006c6",
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/remote/hood",
							"host": [
								"{{url}}"
							],
							"path": [
								"remote",
								"hood"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"hood is now open\"\n}"
				}
			]
		}
	]
}